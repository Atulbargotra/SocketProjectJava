/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author atulb
 */
public class ClientSide extends javax.swing.JFrame {

    PrintWriter pw;
    Socket sock;
    Random r = new Random();
    Scanner reps;
    Date d;
    SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
    ;
    long time1;
    long time2;

    /**
     * Creates new form ClientSide
     */
    public ClientSide() {
        initComponents();
        msgfield.setEditable(false);
        send_btn.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtarea = new javax.swing.JTextArea();
        msgfield = new javax.swing.JTextField();
        btnconnect = new javax.swing.JButton();
        send_btn = new javax.swing.JLabel();
        btnsend = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        txtarea.setEditable(false);
        txtarea.setBackground(new java.awt.Color(0, 0, 0));
        txtarea.setColumns(20);
        txtarea.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtarea.setForeground(new java.awt.Color(204, 204, 204));
        txtarea.setRows(5);
        jScrollPane1.setViewportView(txtarea);

        msgfield.setBackground(new java.awt.Color(0, 0, 0));
        msgfield.setForeground(new java.awt.Color(204, 204, 204));
        msgfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgfieldActionPerformed(evt);
            }
        });

        btnconnect.setBackground(new java.awt.Color(0, 0, 0));
        btnconnect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/networking/icons8_Shutdown_35px.png"))); // NOI18N
        btnconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconnectActionPerformed(evt);
            }
        });

        send_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Email_Send_25px.png"))); // NOI18N
        send_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                send_btnMouseClicked(evt);
            }
        });

        username.setForeground(new java.awt.Color(204, 204, 204));

        close.setText("Quit");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(msgfield, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(send_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122)
                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(close)
                    .addComponent(btnsend, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(close))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnsend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(msgfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(send_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 63, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void sendMessage() {
        try {
            String s = msgfield.getText();
            pw.println(s);
            pw.flush();
            int red = r.nextInt(255);
            int green = r.nextInt(255);
            int blue = r.nextInt(255);
            Color c = new Color(red, green, blue);
            txtarea.setForeground(c);
            txtarea.append("Me:" + s + "\n");
            msgfield.setText("");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Exception in client" + ex);
        }
    }
    private void btnconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconnectActionPerformed
        // TODO add your handling code here:
        try {
            InetAddress ob = InetAddress.getByName("DESKTOP-3GG4R6I");
            sock = new Socket(ob, 1999);
            txtarea.append("Connected to " + sock.getInetAddress() + "\n");
            pw = new PrintWriter(sock.getOutputStream(), true);
            reps = new Scanner(sock.getInputStream());
            client obj = new client();
            obj.start();
            sdf = new SimpleDateFormat("HH:mm:ss");
            send_btn.setEnabled(true);
            btnconnect.setEnabled(false);
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Could not connect to server");
        }

    }//GEN-LAST:event_btnconnectActionPerformed

    private void msgfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgfieldActionPerformed
        // TODO add your handling code here:
        sendMessage();
    }//GEN-LAST:event_msgfieldActionPerformed

    private void send_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_send_btnMouseClicked
        // TODO add your handling code here:
        sendMessage();
    }//GEN-LAST:event_send_btnMouseClicked

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        System.out.println(getSession());
        pw.println("quit");
    }//GEN-LAST:event_closeActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        System.out.println(getSession());
        
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientSide().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnconnect;
    private javax.swing.JLabel btnsend;
    private javax.swing.JButton close;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField msgfield;
    private javax.swing.JLabel send_btn;
    private javax.swing.JTextArea txtarea;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
class client extends Thread {

        public void run() {
            while (true) {
                try {

                    String msg = reps.nextLine();
                    if (msg.equalsIgnoreCase("NAMEREQUIRED")) {
                        String name = JOptionPane.showInputDialog(null, "Enter your username", "Name Required", JOptionPane.INFORMATION_MESSAGE);
                        pw.println(name);
                    } else if (msg.equalsIgnoreCase("namealreadyexists")) {
                        String pass = JOptionPane.showInputDialog(null, "Enter Passord", "Password Required", JOptionPane.WARNING_MESSAGE);
                        pw.println(pass);
                    } else if (msg.equalsIgnoreCase("REENTERPASSWORD")) {
                        String pass = JOptionPane.showInputDialog(null, "Renter Passord", "Password Wrong", JOptionPane.WARNING_MESSAGE);
                        pw.println(pass);
                    } else if (msg.startsWith("NAMEACCEPTED")) {
                        msgfield.setEditable(true);
                        username.setText("You are Loged in as " + msg.substring(12));
                        d = new Date();
                        send_btn.setEnabled(true);
                        time1 = d.getTime();
                    } else if (msg.equals("quit")) {
                        try {
                            sock.close();
                            dispose();
                            return;
                        } catch (IOException ex) {
                            Logger.getLogger(ClientSide.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else {
                        txtarea.append(msg + "\n");
                    }
                } catch (Exception ex) {
                    Logger.getLogger(ClientSide.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    public String getSession() {
        Date d2 = new Date();
        time2 = d2.getTime();
        long diffsec = (time2 - time1) / 1000;
        long hours = diffsec / 3600;
        long minutes = diffsec / 60;
        long seconds = diffsec % 60;
        String time = hours + ":" + minutes + ":" + seconds;
        return time;

    }
}
